// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.15.5
// source: entity.proto

package entity

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Void struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Void) Reset() {
	*x = Void{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Void) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Void) ProtoMessage() {}

func (x *Void) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Void.ProtoReflect.Descriptor instead.
func (*Void) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{0}
}

type Bool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Bool) Reset() {
	*x = Bool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bool) ProtoMessage() {}

func (x *Bool) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bool.ProtoReflect.Descriptor instead.
func (*Bool) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{1}
}

func (x *Bool) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type String struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *String) Reset() {
	*x = String{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*String) ProtoMessage() {}

func (x *String) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use String.ProtoReflect.Descriptor instead.
func (*String) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{2}
}

func (x *String) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type StringList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *StringList) Reset() {
	*x = StringList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringList) ProtoMessage() {}

func (x *StringList) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringList.ProtoReflect.Descriptor instead.
func (*StringList) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{3}
}

func (x *StringList) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type Bytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Bytes) Reset() {
	*x = Bytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bytes) ProtoMessage() {}

func (x *Bytes) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bytes.ProtoReflect.Descriptor instead.
func (*Bytes) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{4}
}

func (x *Bytes) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Int64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Int64) Reset() {
	*x = Int64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int64) ProtoMessage() {}

func (x *Int64) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int64.ProtoReflect.Descriptor instead.
func (*Int64) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{5}
}

func (x *Int64) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Int64List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []int64 `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Int64List) Reset() {
	*x = Int64List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int64List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int64List) ProtoMessage() {}

func (x *Int64List) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int64List.ProtoReflect.Descriptor instead.
func (*Int64List) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{6}
}

func (x *Int64List) GetValues() []int64 {
	if x != nil {
		return x.Values
	}
	return nil
}

type Int32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Int32) Reset() {
	*x = Int32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32) ProtoMessage() {}

func (x *Int32) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32.ProtoReflect.Descriptor instead.
func (*Int32) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{7}
}

func (x *Int32) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Int32List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []int32 `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *Int32List) Reset() {
	*x = Int32List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int32List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32List) ProtoMessage() {}

func (x *Int32List) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32List.ProtoReflect.Descriptor instead.
func (*Int32List) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{8}
}

func (x *Int32List) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

//逐笔成交
type TickRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StockExchange uint32 `protobuf:"varint,1,opt,name=stock_exchange,json=stockExchange,proto3" json:"stock_exchange,omitempty"` //证券市场，1-SH，2-SZ
	StockCode     string `protobuf:"bytes,2,opt,name=stock_code,json=stockCode,proto3" json:"stock_code,omitempty"`              //证券代码
	CreatedAt     int64  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`             //成交日期时间戳(毫秒)
	Code          string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`                                         //成交编号
	Price         uint32 `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`                                      //成交单价
	Volume        uint64 `protobuf:"varint,6,opt,name=volume,proto3" json:"volume,omitempty"`                                    //成交数量
	Amount        uint64 `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`                                    //成交金额
	TxDir         uint32 `protobuf:"varint,8,opt,name=tx_dir,json=txDir,proto3" json:"tx_dir,omitempty"`                         //交易方向：0-未知，1-买方成交，2-卖方成交
	TxKind        uint32 `protobuf:"varint,9,opt,name=tx_kind,json=txKind,proto3" json:"tx_kind,omitempty"`                      //交易类型：0-成交，1-撤单
	BuyOrderSeq   string `protobuf:"bytes,10,opt,name=buy_order_seq,json=buyOrderSeq,proto3" json:"buy_order_seq,omitempty"`     //买方委托序号
	SellOrderSeq  string `protobuf:"bytes,11,opt,name=sell_order_seq,json=sellOrderSeq,proto3" json:"sell_order_seq,omitempty"`  //卖方委托序号
}

func (x *TickRecord) Reset() {
	*x = TickRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickRecord) ProtoMessage() {}

func (x *TickRecord) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickRecord.ProtoReflect.Descriptor instead.
func (*TickRecord) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{9}
}

func (x *TickRecord) GetStockExchange() uint32 {
	if x != nil {
		return x.StockExchange
	}
	return 0
}

func (x *TickRecord) GetStockCode() string {
	if x != nil {
		return x.StockCode
	}
	return ""
}

func (x *TickRecord) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TickRecord) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TickRecord) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TickRecord) GetVolume() uint64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *TickRecord) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TickRecord) GetTxDir() uint32 {
	if x != nil {
		return x.TxDir
	}
	return 0
}

func (x *TickRecord) GetTxKind() uint32 {
	if x != nil {
		return x.TxKind
	}
	return 0
}

func (x *TickRecord) GetBuyOrderSeq() string {
	if x != nil {
		return x.BuyOrderSeq
	}
	return ""
}

func (x *TickRecord) GetSellOrderSeq() string {
	if x != nil {
		return x.SellOrderSeq
	}
	return ""
}

//逐笔委托
type OrderRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StockExchange uint32 `protobuf:"varint,1,opt,name=stock_exchange,json=stockExchange,proto3" json:"stock_exchange,omitempty"` //证券市场，1-SH，2-SZ
	StockCode     string `protobuf:"bytes,2,opt,name=stock_code,json=stockCode,proto3" json:"stock_code,omitempty"`              //证券代码
	CreatedAt     int64  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`             //委托日期时间戳(毫秒)
	Code          string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`                                         //委托编号
	Price         uint32 `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`                                      //委托单价
	Volume        uint64 `protobuf:"varint,6,opt,name=volume,proto3" json:"volume,omitempty"`                                    //委托数量
	Amount        uint64 `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`                                    //成交金额
	TxDir         uint32 `protobuf:"varint,8,opt,name=tx_dir,json=txDir,proto3" json:"tx_dir,omitempty"`                         //交易方向：0-未知，1-买入，2-卖出
	TxKind        uint32 `protobuf:"varint,9,opt,name=tx_kind,json=txKind,proto3" json:"tx_kind,omitempty"`                      //交易类型：1-市价，2-限价，3-本方优先，10-撤单，11-暂不清楚(基金/债券有此值）
}

func (x *OrderRecord) Reset() {
	*x = OrderRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRecord) ProtoMessage() {}

func (x *OrderRecord) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRecord.ProtoReflect.Descriptor instead.
func (*OrderRecord) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{10}
}

func (x *OrderRecord) GetStockExchange() uint32 {
	if x != nil {
		return x.StockExchange
	}
	return 0
}

func (x *OrderRecord) GetStockCode() string {
	if x != nil {
		return x.StockCode
	}
	return ""
}

func (x *OrderRecord) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *OrderRecord) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OrderRecord) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderRecord) GetVolume() uint64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *OrderRecord) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderRecord) GetTxDir() uint32 {
	if x != nil {
		return x.TxDir
	}
	return 0
}

func (x *OrderRecord) GetTxKind() uint32 {
	if x != nil {
		return x.TxKind
	}
	return 0
}

//委托队列
type OrderQueueRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StockExchange   uint32   `protobuf:"varint,1,opt,name=stock_exchange,json=stockExchange,proto3" json:"stock_exchange,omitempty"`                //证券市场，1-SH，2-SZ
	StockCode       string   `protobuf:"bytes,2,opt,name=stock_code,json=stockCode,proto3" json:"stock_code,omitempty"`                             //证券代码
	CreatedAt       int64    `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                            //委托日期时间戳(毫秒)
	Bid1Price       uint32   `protobuf:"varint,4,opt,name=bid1_price,json=bid1Price,proto3" json:"bid1_price,omitempty"`                            //买1价
	Bid1Quantity    uint32   `protobuf:"varint,5,opt,name=bid1_quantity,json=bid1Quantity,proto3" json:"bid1_quantity,omitempty"`                   //买1笔数
	Ask1Price       uint32   `protobuf:"varint,6,opt,name=ask1_price,json=ask1Price,proto3" json:"ask1_price,omitempty"`                            //卖1价
	Ask1Quantity    uint32   `protobuf:"varint,7,opt,name=ask1_quantity,json=ask1Quantity,proto3" json:"ask1_quantity,omitempty"`                   //卖1笔数
	BidVolumeDetail []uint32 `protobuf:"varint,8,rep,packed,name=bid_volume_detail,json=bidVolumeDetail,proto3" json:"bid_volume_detail,omitempty"` //委托买入数量明细
	AskVolumeDetail []uint32 `protobuf:"varint,9,rep,packed,name=ask_volume_detail,json=askVolumeDetail,proto3" json:"ask_volume_detail,omitempty"` //委托卖出数量明细
}

func (x *OrderQueueRecord) Reset() {
	*x = OrderQueueRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderQueueRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderQueueRecord) ProtoMessage() {}

func (x *OrderQueueRecord) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderQueueRecord.ProtoReflect.Descriptor instead.
func (*OrderQueueRecord) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{11}
}

func (x *OrderQueueRecord) GetStockExchange() uint32 {
	if x != nil {
		return x.StockExchange
	}
	return 0
}

func (x *OrderQueueRecord) GetStockCode() string {
	if x != nil {
		return x.StockCode
	}
	return ""
}

func (x *OrderQueueRecord) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *OrderQueueRecord) GetBid1Price() uint32 {
	if x != nil {
		return x.Bid1Price
	}
	return 0
}

func (x *OrderQueueRecord) GetBid1Quantity() uint32 {
	if x != nil {
		return x.Bid1Quantity
	}
	return 0
}

func (x *OrderQueueRecord) GetAsk1Price() uint32 {
	if x != nil {
		return x.Ask1Price
	}
	return 0
}

func (x *OrderQueueRecord) GetAsk1Quantity() uint32 {
	if x != nil {
		return x.Ask1Quantity
	}
	return 0
}

func (x *OrderQueueRecord) GetBidVolumeDetail() []uint32 {
	if x != nil {
		return x.BidVolumeDetail
	}
	return nil
}

func (x *OrderQueueRecord) GetAskVolumeDetail() []uint32 {
	if x != nil {
		return x.AskVolumeDetail
	}
	return nil
}

//股票十档行情
type StockQuoteRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StockExchange   uint32   `protobuf:"varint,1,opt,name=stock_exchange,json=stockExchange,proto3" json:"stock_exchange,omitempty"`                 //证券市场，见数据字典
	StockCode       string   `protobuf:"bytes,2,opt,name=stock_code,json=stockCode,proto3" json:"stock_code,omitempty"`                              //证券代码
	CreatedAt       int64    `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                             //快照日期时间戳(毫秒)
	Status          uint32   `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`                                                    //状态：0-开盘前，1-开盘集合竞价，2-集合竞价至连续竞价，3-连续竞价，4-中午休市，5-收盘集合竞价，6-闭市
	PrevClosePrice  uint32   `protobuf:"varint,5,opt,name=prev_close_price,json=prevClosePrice,proto3" json:"prev_close_price,omitempty"`            //前收盘价
	OpenPrice       uint32   `protobuf:"varint,6,opt,name=open_price,json=openPrice,proto3" json:"open_price,omitempty"`                             //开盘价
	LatestPrice     uint32   `protobuf:"varint,7,opt,name=latest_price,json=latestPrice,proto3" json:"latest_price,omitempty"`                       //最新价
	HighPrice       uint32   `protobuf:"varint,8,opt,name=high_price,json=highPrice,proto3" json:"high_price,omitempty"`                             //最高价
	LowPrice        uint32   `protobuf:"varint,9,opt,name=low_price,json=lowPrice,proto3" json:"low_price,omitempty"`                                //最低价
	LimitUpPrice    uint32   `protobuf:"varint,10,opt,name=limit_up_price,json=limitUpPrice,proto3" json:"limit_up_price,omitempty"`                 //涨停价
	LimitDownPrice  uint32   `protobuf:"varint,11,opt,name=limit_down_price,json=limitDownPrice,proto3" json:"limit_down_price,omitempty"`           //跌停价
	OrderQuantity   uint32   `protobuf:"varint,12,opt,name=order_quantity,json=orderQuantity,proto3" json:"order_quantity,omitempty"`                //成交笔数
	Volume          uint64   `protobuf:"varint,13,opt,name=volume,proto3" json:"volume,omitempty"`                                                   //成交数量
	Amount          uint64   `protobuf:"varint,14,opt,name=amount,proto3" json:"amount,omitempty"`                                                   //成交金额
	BidVolume       uint64   `protobuf:"varint,15,opt,name=bid_volume,json=bidVolume,proto3" json:"bid_volume,omitempty"`                            //委托买入数量
	BidPrice        uint32   `protobuf:"varint,16,opt,name=bid_price,json=bidPrice,proto3" json:"bid_price,omitempty"`                               //委托买入加权平均价
	AskVolume       uint64   `protobuf:"varint,17,opt,name=ask_volume,json=askVolume,proto3" json:"ask_volume,omitempty"`                            //委托卖出数量
	AskPrice        uint32   `protobuf:"varint,18,opt,name=ask_price,json=askPrice,proto3" json:"ask_price,omitempty"`                               //委托卖出加权平均价
	BidPriceDetail  []uint32 `protobuf:"varint,19,rep,packed,name=bid_price_detail,json=bidPriceDetail,proto3" json:"bid_price_detail,omitempty"`    //委托买入价格明细(十档)
	BidVolumeDetail []uint32 `protobuf:"varint,20,rep,packed,name=bid_volume_detail,json=bidVolumeDetail,proto3" json:"bid_volume_detail,omitempty"` //委托买入数量明细(十档)
	AskPriceDetail  []uint32 `protobuf:"varint,21,rep,packed,name=ask_price_detail,json=askPriceDetail,proto3" json:"ask_price_detail,omitempty"`    //委托卖出价格明细(十档)
	AskVolumeDetail []uint32 `protobuf:"varint,22,rep,packed,name=ask_volume_detail,json=askVolumeDetail,proto3" json:"ask_volume_detail,omitempty"` //委托卖出数量明细(十档)
}

func (x *StockQuoteRecord) Reset() {
	*x = StockQuoteRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockQuoteRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockQuoteRecord) ProtoMessage() {}

func (x *StockQuoteRecord) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockQuoteRecord.ProtoReflect.Descriptor instead.
func (*StockQuoteRecord) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{12}
}

func (x *StockQuoteRecord) GetStockExchange() uint32 {
	if x != nil {
		return x.StockExchange
	}
	return 0
}

func (x *StockQuoteRecord) GetStockCode() string {
	if x != nil {
		return x.StockCode
	}
	return ""
}

func (x *StockQuoteRecord) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *StockQuoteRecord) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *StockQuoteRecord) GetPrevClosePrice() uint32 {
	if x != nil {
		return x.PrevClosePrice
	}
	return 0
}

func (x *StockQuoteRecord) GetOpenPrice() uint32 {
	if x != nil {
		return x.OpenPrice
	}
	return 0
}

func (x *StockQuoteRecord) GetLatestPrice() uint32 {
	if x != nil {
		return x.LatestPrice
	}
	return 0
}

func (x *StockQuoteRecord) GetHighPrice() uint32 {
	if x != nil {
		return x.HighPrice
	}
	return 0
}

func (x *StockQuoteRecord) GetLowPrice() uint32 {
	if x != nil {
		return x.LowPrice
	}
	return 0
}

func (x *StockQuoteRecord) GetLimitUpPrice() uint32 {
	if x != nil {
		return x.LimitUpPrice
	}
	return 0
}

func (x *StockQuoteRecord) GetLimitDownPrice() uint32 {
	if x != nil {
		return x.LimitDownPrice
	}
	return 0
}

func (x *StockQuoteRecord) GetOrderQuantity() uint32 {
	if x != nil {
		return x.OrderQuantity
	}
	return 0
}

func (x *StockQuoteRecord) GetVolume() uint64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *StockQuoteRecord) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *StockQuoteRecord) GetBidVolume() uint64 {
	if x != nil {
		return x.BidVolume
	}
	return 0
}

func (x *StockQuoteRecord) GetBidPrice() uint32 {
	if x != nil {
		return x.BidPrice
	}
	return 0
}

func (x *StockQuoteRecord) GetAskVolume() uint64 {
	if x != nil {
		return x.AskVolume
	}
	return 0
}

func (x *StockQuoteRecord) GetAskPrice() uint32 {
	if x != nil {
		return x.AskPrice
	}
	return 0
}

func (x *StockQuoteRecord) GetBidPriceDetail() []uint32 {
	if x != nil {
		return x.BidPriceDetail
	}
	return nil
}

func (x *StockQuoteRecord) GetBidVolumeDetail() []uint32 {
	if x != nil {
		return x.BidVolumeDetail
	}
	return nil
}

func (x *StockQuoteRecord) GetAskPriceDetail() []uint32 {
	if x != nil {
		return x.AskPriceDetail
	}
	return nil
}

func (x *StockQuoteRecord) GetAskVolumeDetail() []uint32 {
	if x != nil {
		return x.AskVolumeDetail
	}
	return nil
}

//订阅信息
type Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic              string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`                                                        //订阅主题，多个逗号分隔
	TopicPattern       string `protobuf:"bytes,2,opt,name=topic_pattern,json=topicPattern,proto3" json:"topic_pattern,omitempty"`                      //订阅主题正则表达式，如果设置此属性，则topic设置无效
	IsSubAll           bool   `protobuf:"varint,3,opt,name=is_sub_all,json=isSubAll,proto3" json:"is_sub_all,omitempty"`                               //是否订阅全部
	ExpiredAt          int64  `protobuf:"varint,4,opt,name=expired_at,json=expiredAt,proto3" json:"expired_at,omitempty"`                              //订阅失效日期
	MaxSubscribeCount  uint32 `protobuf:"varint,5,opt,name=max_subscribe_count,json=maxSubscribeCount,proto3" json:"max_subscribe_count,omitempty"`    //最大订阅数
	UsedSubscribeCount uint32 `protobuf:"varint,6,opt,name=used_subscribe_count,json=usedSubscribeCount,proto3" json:"used_subscribe_count,omitempty"` //已有订阅数
	Version            int64  `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`                                                   //更新版本号
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{13}
}

func (x *Subscription) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Subscription) GetTopicPattern() string {
	if x != nil {
		return x.TopicPattern
	}
	return ""
}

func (x *Subscription) GetIsSubAll() bool {
	if x != nil {
		return x.IsSubAll
	}
	return false
}

func (x *Subscription) GetExpiredAt() int64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

func (x *Subscription) GetMaxSubscribeCount() uint32 {
	if x != nil {
		return x.MaxSubscribeCount
	}
	return 0
}

func (x *Subscription) GetUsedSubscribeCount() uint32 {
	if x != nil {
		return x.UsedSubscribeCount
	}
	return 0
}

func (x *Subscription) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

var File_entity_proto protoreflect.FileDescriptor

var file_entity_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x73, 0x61, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x06, 0x0a, 0x04, 0x56, 0x6f, 0x69, 0x64,
	0x22, 0x1c, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1e,
	0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x24,
	0x0a, 0x0a, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x22, 0x1d, 0x0a, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x1d, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x23, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x1d, 0x0a, 0x05, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x23, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xc5, 0x02, 0x0a, 0x0a,
	0x54, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x5f,
	0x64, 0x69, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x78, 0x44, 0x69, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x74, 0x78, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x75, 0x79,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x62, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x71, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x71, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x65, 0x71, 0x22, 0xfc, 0x01, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x78, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x74, 0x78, 0x44, 0x69, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x78, 0x4b, 0x69,
	0x6e, 0x64, 0x22, 0xd7, 0x02, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x69, 0x64, 0x31, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x62, 0x69, 0x64, 0x31, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62,
	0x69, 0x64, 0x31, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x62, 0x69, 0x64, 0x31, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x6b, 0x31, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x73, 0x6b, 0x31, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x73, 0x6b, 0x31, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x73, 0x6b, 0x31, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x69, 0x64, 0x5f, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0f, 0x62, 0x69, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x2a, 0x0a, 0x11, 0x61, 0x73, 0x6b, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x61, 0x73, 0x6b,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x82, 0x06, 0x0a,
	0x10, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28,
	0x0a, 0x10, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x70,
	0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x69,
	0x67, 0x68, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x68, 0x69, 0x67, 0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x77,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x6f,
	0x77, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f,
	0x75, 0x70, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x44, 0x6f, 0x77,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x69, 0x64, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x62, 0x69, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x62, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x6b,
	0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61,
	0x73, 0x6b, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x73, 0x6b, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x73, 0x6b,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0e, 0x62, 0x69, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x2a, 0x0a, 0x11, 0x62, 0x69, 0x64, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x62, 0x69, 0x64, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x61,
	0x73, 0x6b, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x15, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x73, 0x6b, 0x5f, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0f, 0x61, 0x73, 0x6b, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x22, 0x82, 0x02, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x5f, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x1c, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x75, 0x62, 0x41, 0x6c, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61,
	0x78, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x75, 0x73,
	0x65, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x75, 0x73, 0x65, 0x64, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x17, 0x5a, 0x15, 0x6c, 0x32, 0x2d, 0x70, 0x75, 0x73,
	0x68, 0x2d, 0x67, 0x6f, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_entity_proto_rawDescOnce sync.Once
	file_entity_proto_rawDescData = file_entity_proto_rawDesc
)

func file_entity_proto_rawDescGZIP() []byte {
	file_entity_proto_rawDescOnce.Do(func() {
		file_entity_proto_rawDescData = protoimpl.X.CompressGZIP(file_entity_proto_rawDescData)
	})
	return file_entity_proto_rawDescData
}

var file_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_entity_proto_goTypes = []interface{}{
	(*Void)(nil),             // 0: sa.rpc.entity.Void
	(*Bool)(nil),             // 1: sa.rpc.entity.Bool
	(*String)(nil),           // 2: sa.rpc.entity.String
	(*StringList)(nil),       // 3: sa.rpc.entity.StringList
	(*Bytes)(nil),            // 4: sa.rpc.entity.Bytes
	(*Int64)(nil),            // 5: sa.rpc.entity.Int64
	(*Int64List)(nil),        // 6: sa.rpc.entity.Int64List
	(*Int32)(nil),            // 7: sa.rpc.entity.Int32
	(*Int32List)(nil),        // 8: sa.rpc.entity.Int32List
	(*TickRecord)(nil),       // 9: sa.rpc.entity.TickRecord
	(*OrderRecord)(nil),      // 10: sa.rpc.entity.OrderRecord
	(*OrderQueueRecord)(nil), // 11: sa.rpc.entity.OrderQueueRecord
	(*StockQuoteRecord)(nil), // 12: sa.rpc.entity.StockQuoteRecord
	(*Subscription)(nil),     // 13: sa.rpc.entity.Subscription
}
var file_entity_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_entity_proto_init() }
func file_entity_proto_init() {
	if File_entity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_entity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Void); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*String); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int64List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Int32List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderQueueRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockQuoteRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entity_proto_goTypes,
		DependencyIndexes: file_entity_proto_depIdxs,
		MessageInfos:      file_entity_proto_msgTypes,
	}.Build()
	File_entity_proto = out.File
	file_entity_proto_rawDesc = nil
	file_entity_proto_goTypes = nil
	file_entity_proto_depIdxs = nil
}
